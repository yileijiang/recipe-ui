[{"/home/lei/Desktop/code/MERN/recipes/ui/src/index.js":"1","/home/lei/Desktop/code/MERN/recipes/ui/src/App.js":"2","/home/lei/Desktop/code/MERN/recipes/ui/src/components/RecipeCard.js":"3","/home/lei/Desktop/code/MERN/recipes/ui/src/components/Button.js":"4","/home/lei/Desktop/code/MERN/recipes/ui/src/views/Home.js":"5","/home/lei/Desktop/code/MERN/recipes/ui/src/views/Recipes.js":"6","/home/lei/Desktop/code/MERN/recipes/ui/src/views/Recipe.js":"7","/home/lei/Desktop/code/MERN/recipes/ui/src/components/LinkButton.js":"8","/home/lei/Desktop/code/MERN/recipes/ui/src/views/Signup.js":"9","/home/lei/Desktop/code/MERN/recipes/ui/src/components/SignupForm.js":"10","/home/lei/Desktop/code/MERN/recipes/ui/src/components/UserInformation.js":"11","/home/lei/Desktop/code/MERN/recipes/ui/src/views/Login.js":"12","/home/lei/Desktop/code/MERN/recipes/ui/src/components/LoginForm.js":"13","/home/lei/Desktop/code/MERN/recipes/ui/src/views/NewRecipe.js":"14","/home/lei/Desktop/code/MERN/recipes/ui/src/components/RecipeForm.js":"15","/home/lei/Desktop/code/MERN/recipes/ui/src/components/IngredientField.js":"16","/home/lei/Desktop/code/MERN/recipes/ui/src/components/RecipeDetails.js":"17","/home/lei/Desktop/code/MERN/recipes/ui/src/views/Profile.js":"18","/home/lei/Desktop/code/MERN/recipes/ui/src/components/Navbar.js":"19","/home/lei/Desktop/code/MERN/recipes/ui/src/UserWrapper.js":"20","/home/lei/Desktop/code/MERN/recipes/ui/src/components/ButtonExpandCollapse.js":"21"},{"size":558,"mtime":1610631871012,"results":"22","hashOfConfig":"23"},{"size":1288,"mtime":1610562243058,"results":"24","hashOfConfig":"23"},{"size":3484,"mtime":1610660043943,"results":"25","hashOfConfig":"23"},{"size":313,"mtime":1610651532024,"results":"26","hashOfConfig":"23"},{"size":124,"mtime":1610374023909,"results":"27","hashOfConfig":"23"},{"size":871,"mtime":1610660125317,"results":"28","hashOfConfig":"23"},{"size":671,"mtime":1610485764625,"results":"29","hashOfConfig":"23"},{"size":485,"mtime":1610645535989,"results":"30","hashOfConfig":"23"},{"size":130,"mtime":1610380823826,"results":"31","hashOfConfig":"23"},{"size":1542,"mtime":1610485244130,"results":"32","hashOfConfig":"23"},{"size":257,"mtime":1610486764796,"results":"33","hashOfConfig":"23"},{"size":158,"mtime":1610562087574,"results":"34","hashOfConfig":"23"},{"size":1484,"mtime":1610564100755,"results":"35","hashOfConfig":"23"},{"size":162,"mtime":1610628124044,"results":"36","hashOfConfig":"23"},{"size":2757,"mtime":1610485382418,"results":"37","hashOfConfig":"23"},{"size":1140,"mtime":1610477576142,"results":"38","hashOfConfig":"23"},{"size":704,"mtime":1610540508625,"results":"39","hashOfConfig":"23"},{"size":908,"mtime":1610627988195,"results":"40","hashOfConfig":"23"},{"size":981,"mtime":1610564076995,"results":"41","hashOfConfig":"23"},{"size":227,"mtime":1610556922068,"results":"42","hashOfConfig":"23"},{"size":671,"mtime":1610650410208,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1vz0fao",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lei/Desktop/code/MERN/recipes/ui/src/index.js",[],["92","93"],"/home/lei/Desktop/code/MERN/recipes/ui/src/App.js",["94"],"import {\n  BrowserRouter as Router,\n  Switch, Route\n} from 'react-router-dom'\nimport { useCookies } from 'react-cookie'\nimport './App.css'\nimport Home from './views/Home'\nimport Recipes from './views/Recipes'\nimport Recipe from './views/Recipe'\nimport Signup from './views/Signup'\nimport Login from './views/Login'\nimport NewRecipe from './views/NewRecipe'\nimport Profile from './views/Profile'\nimport Navbar from './components/Navbar'\n\n\n\n\n\nconst App = () => {\n\n  const [ cookies, setCookie, removeCookie ] = useCookies(['token'])\n\n\n  return (\n      <Router>\n        <div>\n          <Navbar removeCookie={removeCookie} />\n        </div>\n\n        <Switch>\n          <Route path='/recipes'>\n            <Recipes />\n          </Route>\n          <Route path='/recipe/:id' children={<Recipe />}>\n            <Recipe />\n          </Route>\n          <Route path='/newRecipe'>\n            <NewRecipe />\n          </Route>\n          <Route path='/signup'>\n            <Signup />\n          </Route>\n          <Route path='/login'>\n            <Login setCookie={setCookie}/>\n          </Route>\n          <Route path='/profile'>\n            <Profile />\n          </Route>\n          <Route path='/'>\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n  )\n}\n\nexport default App;\n","/home/lei/Desktop/code/MERN/recipes/ui/src/components/RecipeCard.js",["95","96","97","98"],"/home/lei/Desktop/code/MERN/recipes/ui/src/components/Button.js",[],"/home/lei/Desktop/code/MERN/recipes/ui/src/views/Home.js",[],"/home/lei/Desktop/code/MERN/recipes/ui/src/views/Recipes.js",[],"/home/lei/Desktop/code/MERN/recipes/ui/src/views/Recipe.js",[],"/home/lei/Desktop/code/MERN/recipes/ui/src/components/LinkButton.js",[],"/home/lei/Desktop/code/MERN/recipes/ui/src/views/Signup.js",[],"/home/lei/Desktop/code/MERN/recipes/ui/src/components/SignupForm.js",[],"/home/lei/Desktop/code/MERN/recipes/ui/src/components/UserInformation.js",[],"/home/lei/Desktop/code/MERN/recipes/ui/src/views/Login.js",[],"/home/lei/Desktop/code/MERN/recipes/ui/src/components/LoginForm.js",["99"],"import React, { useState } from 'react'\nimport { gql, useMutation }  from '@apollo/client'\nimport { useHistory } from 'react-router'\nimport Button from './Button'\nimport UserWrapper from '../UserWrapper'\n\nconst LoginForm = ({setCookie}) => {\n  const [ newUsername, setNewUsername ] = useState('')\n  const [ newPassword, setNewPassword ] = useState('')\n  let history = useHistory()\n\n  const query = gql`\n    mutation sendUserData($user: UserInputLogin!) {\n      userLogin(userInputLogin: $user) {\n        value\n        userId\n      }\n    }\n  `\n\n  const [loginUser, { data }] = useMutation(query, {\n    variables: { \"user\": { \"username\": `${newUsername}`, \"password\": `${newPassword}`}},\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setCookie('token', data.userLogin.value, {path: '/'})\n      UserWrapper.setUserId(data.userLogin.userId)\n      history.push(`/profile`)\n    }\n  })\n\n  const handleUsernameChange = (event) => {\n    setNewUsername(event.target.value)\n  }\n  const handlePasswordChange = (event) => {\n    setNewPassword(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    loginUser() \n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        username\n        <input value={newUsername} onChange={handleUsernameChange} /> <br/>\n        password\n        <input value={newPassword} onChange={handlePasswordChange} />\n        <Button text=\"Login\" />\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm","/home/lei/Desktop/code/MERN/recipes/ui/src/views/NewRecipe.js",[],"/home/lei/Desktop/code/MERN/recipes/ui/src/components/RecipeForm.js",["100"],"import React, { useState } from 'react'\nimport { gql, useMutation } from '@apollo/client'\nimport Button from './Button'\nimport IngredientField from './IngredientField'\nimport stringifyObject from 'stringify-object'\nimport { useHistory } from 'react-router'\n\n\n\nconst RecipeForm = () => {\n  const [ newTitle, setNewTitle ] = useState('')\n  const [ newDescription, setNewDescription ] = useState('')\n  const [ newInstruction, setNewInstruction ] = useState('')\n  const [ ingredients, setIngredients ] = useState([{name: '', quantity: '', id: '1'}])\n  const [ counter, setCounter ] = useState(2)\n  let history = useHistory()\n\n  const query = gql`\n    mutation {\n      recipeAdd(\n        recipeInput: {\n          title: \"${newTitle}\"\n          description: \"${newDescription}\"\n          instruction: \"${newInstruction}\"\n          ingredients: ${stringifyObject(ingredients, { singleQuotes: false })}\n        }\n      ) {\n        id\n        title\n        description\n        instruction\n        ingredients {\n          name\n          quantity\n        }\n      }\n    }\n  `\n\n  const [addRecipe, { data }] = useMutation(query, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      console.log(data)\n      history.push(`/recipe/${data.recipeAdd.id}`)\n    }\n  })\n\n  \n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleDescriptionChange = (event) => {\n    setNewDescription(event.target.value)\n  }\n\n  const handleInstructionChange = (event) => {\n    setNewInstruction(event.target.value)\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    let copyIngredients = ingredients.map(i => i)\n    copyIngredients.forEach(i => delete i.id)\n    await setIngredients(copyIngredients)\n    addRecipe()\n  }\n\n  const addNewField = (event) => {\n    event.preventDefault()\n    const newIngredients = ingredients.concat({name: '', quantity: '', id: `${counter}`})\n    setIngredients(newIngredients)\n    const newCounter = counter + 1\n    setCounter(newCounter)\n  }\n\n  const ingredientFields = ingredients.map( (ingredient) => {\n    return <IngredientField key={ingredient.id} ingredient={ingredient} ingredients={ingredients} setIngredients={setIngredients}/>\n  })\n  \n  return (\n    <div>\n       <form onSubmit={handleSubmit} >\n        title\n        <input value={newTitle} onChange={handleTitleChange} /> <br/>\n        description\n        <input value={newDescription} onChange={handleDescriptionChange} /> <br/>\n        instruction\n        <input value={newInstruction} onChange={handleInstructionChange} />\n\n        {ingredientFields}\n\n        <Button text='Add More Ingredients' onClick={addNewField} />\n        <Button text='Add New Recipe'/>\n      </form>\n    </div>\n  )\n}\n\nexport default RecipeForm","/home/lei/Desktop/code/MERN/recipes/ui/src/components/IngredientField.js",[],"/home/lei/Desktop/code/MERN/recipes/ui/src/components/RecipeDetails.js",["101"],"\n\nconst RecipeDetails = ({recipe}) => {\n  const imgURL='https://images.unsplash.com/photo-1512621776951-a57141f2eefd?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80'\n\n  const ingredientsList = recipe.ingredients.map( ingredient => {\n    return <li> {ingredient.name} {ingredient.quantity} </li>\n  })\n  \n\n  return(\n    <div>\n      <h1>{recipe.title}</h1>\n      <hr/>\n      <img src={imgURL} width='500px' height='300pyx'/>\n      <p>{recipe.description}</p>\n      <hr/>\n      <h3>Ingredients</h3>\n      <ul> {ingredientsList} </ul>\n      <hr/>\n      <h3>Instructions</h3>\n      <p>{recipe.instruction} </p>\n    </div>\n\n  )\n}\n\nexport default RecipeDetails","/home/lei/Desktop/code/MERN/recipes/ui/src/views/Profile.js",["102"],"import { gql, useQuery } from '@apollo/client'\nimport RecipeCard from '../components/RecipeCard'\n\nimport UserWrapper from '../UserWrapper'\n\nconst Profile = () => {\n\n  const query = gql`\n    query {\n      recipesUser {\n        title\n        description\n        instruction\n        id\n        ingredients {\n          name\n          quantity\n        }\n      }\n    }\n    `\n\n  const { loading, error, data } = useQuery(query, {\n    fetchPolicy: \"no-cache\"\n  })\n    \n  \n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n\n  //Display USERNAME, EDIT PROFILE BUTTON, PICTURE USER, \n  // DISPLAY MENU: MY RECIPES; FAVORITE RECIPES\n\n  return(\n    <>\n      <p> WELCOME </p>\n\n      <h1>My Recipes</h1>\n      {data.recipesUser.map(r => \n        <RecipeCard key={r.id} recipe={r} />\n      )}\n\n      <h1>My Favorite Recipes</h1>\n    \n      \n     \n      \n\n    \n    </>\n  )\n}\n\nexport default Profile","/home/lei/Desktop/code/MERN/recipes/ui/src/components/Navbar.js",[],"/home/lei/Desktop/code/MERN/recipes/ui/src/UserWrapper.js",[],"/home/lei/Desktop/code/MERN/recipes/ui/src/components/ButtonExpandCollapse.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":22,"column":11,"nodeType":"109","messageId":"110","endLine":22,"endColumn":18},{"ruleId":"107","severity":1,"message":"111","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":18},{"ruleId":"107","severity":1,"message":"112","line":22,"column":26,"nodeType":"109","messageId":"110","endLine":22,"endColumn":30},{"ruleId":"107","severity":1,"message":"113","line":60,"column":9,"nodeType":"109","messageId":"110","endLine":60,"endColumn":15},{"ruleId":"107","severity":1,"message":"114","line":89,"column":9,"nodeType":"109","messageId":"110","endLine":89,"endColumn":30},{"ruleId":"107","severity":1,"message":"112","line":21,"column":23,"nodeType":"109","messageId":"110","endLine":21,"endColumn":27},{"ruleId":"107","severity":1,"message":"112","line":40,"column":23,"nodeType":"109","messageId":"110","endLine":40,"endColumn":27},{"ruleId":"115","severity":1,"message":"116","line":15,"column":7,"nodeType":"117","endLine":15,"endColumn":56},{"ruleId":"107","severity":1,"message":"118","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":19},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'cookies' is assigned a value but never used.","Identifier","unusedVar","'LinkButton' is defined but never used.","'data' is assigned a value but never used.","'imgURL' is assigned a value but never used.","'RecipeCardButtonStyle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'UserWrapper' is defined but never used.","no-global-assign","no-unsafe-negation"]